---
title: "Spotify"
author: "AlexArruda"
date: "22/01/2020"
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r}
#Libraries
library(tidyverse)
library(lubridate)
```


```{r}
spotify_songs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')

summary(spotify_songs)
glimpse(spotify_songs)
distinct(spotify_songs, playlist_genre)
```


```{r}
# convertir le tempo en un indicateur qui varie entre 0 et 1

tempo <-
  data.frame(
    tempo = c(0, 99.96, 120.88, 133.92, 239.44),
    tempo_0_1 = c(0, 0.25, 0.50, 0.75, 1))

formula <- y ~ x
gg <- ggplot(data = tempo, aes(x = tempo, y = tempo_0_1)) +
  geom_point() +
  geom_smooth(method = 'lm', se = FALSE, formula = formula) +
  theme_classic() +
  scale_y_continuous(limits = c(0, 1))
  
gg

# Como descobrir a equação?
tempo = c(0, 99.96, 120.88, 133.92, 239.44)
tempo_0_1 = c(0, 0.25, 0.50, 0.75, 1)
ww <- data.frame(x = tempo, y = tempo_0_1)
ggplot(ww, aes(tempo, tempo_0_1)) +
  geom_point()
ww1 <- lm(y ~ x, data = ww)
coef(ww1)
```

```{r}
data <- spotify_songs %>%
select(playlist_genre, danceability, energy, valence, tempo) %>%
mutate(tempo_0_1 = 0.00438 * tempo - 0.0208) %>%
select(-tempo) %>%
gather(type, valeur, -playlist_genre) %>%
group_by(playlist_genre, type) %>%
summarise_if(is.numeric, median, na.rm = TRUE) %>%
ungroup()

#Visualizar as médias por gênero
data2 <- spotify_songs %>%
select(playlist_genre, danceability, energy, valence, tempo) %>%
mutate(tempo_0_1 = 0.00438 * tempo - 0.0208) %>%
select(-tempo) %>%
group_by(playlist_genre) %>%
summarise_if(is.numeric, median, na.rm = TRUE) %>%
ungroup()
```

```{r}
#Graphique
gg <- ggplot(data = data, aes(x = valeur, y = playlist_genre))

gg <- gg +
geom_segment(aes(x = 0.3,xend = 0.9,y = playlist_genre,yend = playlist_genre),color = "#838A90",alpha = 0.1,size = 4)
gg <- gg +
geom_segment(aes(x = 0.3,xend = 0.9,y = playlist_genre,yend = playlist_genre),color = "#ffffff",alpha = 1,size = 0.5)
gg <- gg +
geom_point(aes(fill = type,group = playlist_genre),color = "#FFFFFF",size = 20,pch = 21,alpha = 0.5)
gg <- gg +
geom_point(aes(fill = type,group = playlist_genre),color = "#FFFFFF",size = 12,pch = 21)
gg <- gg +
scale_fill_brewer(palette = "Set1",labels = c("Dançabilidade", "Energia", "Tempo", "Alegria"))
```


```{r}
#ajouter les étiquettes de points  
gg <- gg + geom_text(data = data, aes( x = valeur, y = playlist_genre, label = (round(data$valeur, 1)), group = NULL), color = "#ffffff", size = 4.5, vjust = 0.5, hjust = 0.5, fontface = "bold")
```


```{r}
#pour l'axe des y à l'intérieur du graphique  
gg <-
  gg + annotate( geom = "text", x = 0.3, y = 1.3, label = "Edm", color = "#ffffff", size = 5.5, vjust = 0.5, hjust = 0, fontface = "bold")

gg <-
  gg + annotate(geom = "text", x = 0.3, y = 2.3,   label = "Latin", color = "#ffffff", size = 5.5, vjust = 0.5, hjust = 0, fontface = "bold")

gg <-
  gg + annotate(geom = "text",x = 0.3,y = 3.3,label = "Pop",color = "#ffffff",size = 5.5,vjust = 0.5,hjust = 0,fontface = "bold")

gg <-
  gg + annotate(
    geom = "text",
    x = 0.3,
    y = 4.3,
    label = "R&B",
    color = "#ffffff",
    size = 5.5,
    vjust = 0.5,
    hjust = 0,
    fontface = "bold"
  )

gg <-
  gg + annotate(
    geom = "text",
    x = 0.3,
    y = 5.3,
    label = "Rap",
    color = "#ffffff",
    size = 5.5,
    vjust = 0.5,
    hjust = 0,
    fontface = "bold"
  )

gg <-
  gg + annotate(
    geom = "text",
    x = 0.3,
    y = 6.3,
    label = "Rock",
    color = "#ffffff",
    size = 5.5,
    vjust = 0.5,
    hjust = 0,
    fontface = "bold"
  )
```


```{r}
#ajuster l'axe des x 
gg <- gg + scale_x_continuous(expand = c(0,0))
```


```{r}
#modifier le thème  
gg <- gg +  theme(plot.background = element_rect(fill = "#171717"),
                    panel.background = element_rect(fill = "#171717"),
                    panel.grid.major.y= element_blank(),
                    panel.grid.major.x= element_blank(),
                    panel.grid.minor = element_blank(),
                    axis.line.x = element_blank(),
                    axis.line.y =element_blank(),
                    axis.ticks.x = element_blank(),
                     axis.ticks.y = element_blank())  
gg <- gg +  theme(legend.position="top",
                     legend.title = element_blank(),
                     legend.background = element_blank(),
                     legend.key=element_blank(),
                     legend.spacing.x = unit(0.2, 'cm'),
                     legend.text= element_text(hjust =0.5,size= 8, colour = "#FFFFFF"))  
gg <- gg +    guides(fill = guide_legend(nrow = 1, reverse = TRUE))
```


```{r}
#ajouter les titres  
gg<-gg + labs(title="Quelle genre de musique préfères-tu?",
              subtitle = "\nSpotify classe les différents genre de musique en fonction de leurs caractéristiques pour aider\nles utilisateurs à faire leur choix.\n",
                x="Indice",
                y=" ", 
                caption="\nSOURCE: Spotifyr   |  DESIGN: Johanie Fournier, agr.")  
gg<-gg + theme(  plot.title    =  element_text(size=30, hjust=0,vjust=0.5, color="#FFFFFF", family="Tw Cen MT", face="bold"),
                   plot.subtitle = element_text(size=15, hjust=0,vjust=0.5, color="#FFFFFF", family="Tw Cen MT"),
                   plot.caption  = element_text(size=10, hjust=1,vjust=0.5, color="#FFFFFF", family="Tw Cen MT"),
                   axis.title.x  = element_text(size=
15, hjust=0.05,vjust=0.5, color="#FFFFFF", family="Tw Cen MT", angle =0),
                   axis.title.y  = element_blank(),
                   axis.text.y   = element_blank(),
                    axis.text.x   = element_blank())
gg
```

